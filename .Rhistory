geom_line(color = color_palette[5], size = 1) +
labs(title = "Yıllara Göre", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0 , size = 10 , face = "bold"),
axis.text.y = element_text(angle = 0 , size = 10 , face = "bold"))
library(ggplot2)
library(RColorBrewer)
# Renk skalasını belirle
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[1], high = color_palette[9]) +
labs(title = "Yıllara Göre", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0 , size = 10 , face = "bold"),
axis.text.y = element_text(angle = 0 , size = 10 , face = "bold"))
library(ggplot2)
library(RColorBrewer)
# Renk skalasını belirle
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[1], high = color_palette[9]) +
labs(title = "Yıllara Göre", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[1], high = color_palette[9]) +
labs(title = "Yıllara Göre", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = Derinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[1], high = color_palette[9]) +
labs(title = "Yıllara Göre", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[1], high = color_palette[9]) +
labs(title = "Yıllara Göre", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[1], high = color_palette[9]) +
labs(title = "Yıllara Göre Depremlerin Derinliği", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[2], high = color_palette[9]) +
labs(title = "Yıllara Göre Depremlerin Derinliği", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[5], high = color_palette[9]) +
labs(title = "Yıllara Göre Depremlerin Derinliği", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[3.5], high = color_palette[9]) +
labs(title = "Yıllara Göre Depremlerin Derinliği", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
boxplot(tr_earthquakes$Derinlik)
boxplot(tr_earthquakes$Olus.zamani)
tr_earthquakes <- read.csv("turkey_earthquakes(1915-2023_may).csv")
head(tr_earthquakes)
ncol(tr_earthquakes)
nrow(tr_earthquakes)
colnames(tr_earthquakes)
tr_earthquakes$No <- NULL
colSums(is.na(tr_earthquakes))
library(Hmisc)
impute_arg <- aregImpute(Mw ~ Deprem.Kodu + Enlem + Boylam + Derinlik + xM + MD + ML + Ms + Mb , data = tr_earthquakes, n.impute = 1)
# Doldurulan Mw değerleri;
impute_arg$imputed$Mw
new <- which(is.na(tr_earthquakes$Mw))
# Atama işlemi;
tr_earthquakes[new,]$Mw <- impute_arg$imputed$Mw
for (i in 1:nrow(tr_earthquakes)) {
if (tr_earthquakes$Mw[i] > tr_earthquakes$xM[i]) {
tr_earthquakes$xM[i] <- tr_earthquakes$Mw[i]
} else {
next
}
}
if (any(tr_earthquakes$Mw > tr_earthquakes$xM)) {
print("Hata")
} else {
print("Sorunsuz")
}
library(hexbin)
library(ggplot2)
library(grDevices)
# Renk şemasını kullanalım;
color_palette <- rev(grDevices::heat.colors(20))
ggplot(tr_earthquakes, aes(x = Enlem, y = Boylam)) +
geom_hex(bins = 20, color = "white") +
scale_fill_gradientn(colors = color_palette)
library(corrplot)
library(RColorBrewer)
corrplot(cor(tr_earthquakes[,c(1,4,5,6)]), method = "ellipse", col = brewer.pal(n = 9, name = "PuBu"))
corrplot(cor(tr_earthquakes[,c(8,9,10,11,12,6)]), method = "ellipse", col = brewer.pal(n = 9, name = "PuBu"))
library(lubridate)
tr_earthquakes$Olus.tarihi <- dmy(tr_earthquakes$Olus.tarihi)
tr_earthquakes$Year <- year(tr_earthquakes$Olus.tarihi)
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[3.5], high = color_palette[9]) +
labs(title = "Yıllara Göre Depremlerin Derinliği", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
tr_earthquakes <- read.csv("turkey_earthquakes(1915-2023_may).csv")
head(tr_earthquakes)
tr_earthquakes <- read.csv("turkey_earthquakes_1915-2023.csv")
head(tr_earthquakes)
ncol(tr_earthquakes)
nrow(tr_earthquakes)
tr_earthquakes$No <- NULL
colSums(is.na(tr_earthquakes))
library(Hmisc)
impute_arg <- aregImpute(Mw ~ Deprem.Kodu + Enlem + Boylam + Derinlik + xM + MD + ML + Ms + Mb , data = tr_earthquakes, n.impute = 1)
# Doldurulan Mw değerleri;
impute_arg$imputed$Mw
new <- which(is.na(tr_earthquakes$Mw))
# Atama işlemi;
tr_earthquakes[new,]$Mw <- impute_arg$imputed$Mw
for (i in 1:nrow(tr_earthquakes)) {
if (tr_earthquakes$Mw[i] > tr_earthquakes$xM[i]) {
tr_earthquakes$xM[i] <- tr_earthquakes$Mw[i]
} else {
next
}
}
if (any(tr_earthquakes$Mw > tr_earthquakes$xM)) {
print("Hata")
} else {
print("Sorunsuz")
}
library(dplyr)
library(lubridate)
tr_earthquakes <- tr_earthquakes %>%
mutate(Olus.tarihi = as.Date(Olus.tarihi, format = "%Y.%m.%d")) %>%
mutate(Olus.tarihi = format(Olus.tarihi, "%d/%m/%Y"))
head(tr_earthquakes)
library(hexbin)
library(ggplot2)
library(grDevices)
# Renk şemasını kullanalım;
color_palette <- rev(grDevices::heat.colors(20))
ggplot(tr_earthquakes, aes(x = Enlem, y = Boylam)) +
geom_hex(bins = 20, color = "white") +
scale_fill_gradientn(colors = color_palette)
library(corrplot)
library(RColorBrewer)
corrplot(cor(tr_earthquakes[,c(1,4,5,6)]), method = "ellipse", col = brewer.pal(n = 9, name = "PuBu"))
corrplot(cor(tr_earthquakes[,c(8,9,10,11,12,6)]), method = "ellipse", col = brewer.pal(n = 9, name = "PuBu"))
library(lubridate)
tr_earthquakes$Olus.tarihi <- dmy(tr_earthquakes$Olus.tarihi)
tr_earthquakes$Year <- year(tr_earthquakes$Olus.tarihi)
library(ggplot2)
library(RColorBrewer)
color_palette <- brewer.pal(9, "OrRd")
yearof <- tr_earthquakes %>%
group_by(Year) %>%
summarise(toplamDerinlik = sum(Derinlik))
ggplot(yearof, aes(x = Year, y = toplamDerinlik, group = 1, color = toplamDerinlik)) +
geom_line(size = 1) +
scale_color_gradient(low = color_palette[3.5], high = color_palette[9]) +
labs(title = "Yıllara Göre Depremlerin Derinliği", x = "Yıllar", y = "Derinlik") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 0, size = 10, face = "bold"),
axis.text.y = element_text(angle = 0, size = 10, face = "bold"),
panel.background = element_rect(fill = "white"))
table(tr_earthquakes$Deprem.Kodu)
table(tr_earthquakes$Derinlik)
min(tr_earthquakes$Derinlik)
max(tr_earthquakes$Derinlik)
min(tr_earthquakes$Derinlik)
max(tr_earthquakes$Derinlik)
range(tr_earthquakes$Derinlik)
range(tr_earthquakes$Derinlik)
tr_earthquakes$Derinlik <- factor(ifelse(tr_earthquakes$Derinlik < 50, "0-49",
ifelse(tr_earthquakes$Derinlik >= 50 & tr_earthquakes$Derinlik < 100, "50-99",
ifelse(tr_earthquakes$Derinlik >= 100 & tr_earthquakes$Derinlik < 150, "100-149",
ifelse(tr_earthquakes$Derinlik >= 150 & tr_earthquakes$Derinlik < 200, "150-199")))),
levels = c("0-49", "50-99", "100-149", "150-199"),
labels = c("0-49", "50-99", "100-149", "150-199"))
tr_earthquakes$Derinlik <- factor(ifelse(tr_earthquakes$Derinlik < 50, "'0-49'",
ifelse(tr_earthquakes$Derinlik >= 50 & tr_earthquakes$Derinlik < 100, "50-99",
ifelse(tr_earthquakes$Derinlik >= 100 & tr_earthquakes$Derinlik < 150, "100-149",
ifelse(tr_earthquakes$Derinlik >= 150 & tr_earthquakes$Derinlik < 200, "150-199")))),
levels = c("0-49", "50-99", "100-149", "150-199"),
labels = c("0-49", "50-99", "100-149", "150-199"))
tr_earthquakes$Derinlik <- factor(ifelse(tr_earthquakes$Derinlik < 50, "0-49",
ifelse(tr_earthquakes$Derinlik >= 50 & tr_earthquakes$Derinlik < 100, "50-99",
ifelse(tr_earthquakes$Derinlik >= 100 & tr_earthquakes$Derinlik < 150, "100-149",
ifelse(tr_earthquakes$Derinlik >= 150 & tr_earthquakes$Derinlik <= 199, "150-199")))),
levels = c("0-49", "50-99", "100-149", "150-199"),
labels = c("0-49", "50-99", "100-149", "150-199"))
tr_earthquakes$Derinlik <- factor(ifelse(tr_earthquakes$Derinlik < 50, "0-49",
ifelse(tr_earthquakes$Derinlik >= 50 & tr_earthquakes$Derinlik < 100, "50-99",
ifelse(tr_earthquakes$Derinlik >= 100 & tr_earthquakes$Derinlik < 150, "100-149",
else(tr_earthquakes$Derinlik >= 150 & tr_earthquakes$Derinlik < 200, "150-199")))),
tr_earthquakes$Derinlik <- factor(ifelse(tr_earthquakes$Derinlik < 50, "0-49",
ifelse(tr_earthquakes$Derinlik >= 50 & tr_earthquakes$Derinlik < 100, "50-99",
ifelse(tr_earthquakes$Derinlik >= 100 & tr_earthquakes$Derinlik < 150, "100-149", "150-199")))),
tr_earthquakes$Derinlik <- factor(ifelse(tr_earthquakes$Derinlik < 50, "0-49",
ifelse(tr_earthquakes$Derinlik >= 50 & tr_earthquakes$Derinlik < 100, "50-99",
ifelse(tr_earthquakes$Derinlik >= 100 & tr_earthquakes$Derinlik < 150, "100-149", "150-199"))),
levels = c("0-49", "50-99", "100-149", "150-199"),
labels = c("0-49", "50-99", "100-149", "150-199"))
table(tr_earthquakes$Derinlik)
ggplot(data = tr_earthquakes, aes(x = ML, y = Derinlik, fill = Year)) +
geom_area(position = "stack") +
ggtitle("Şubelere Göre Zamana Bağlı Satış") +
xlab("Aylar") +
ylab("Satışlar") +
scale_fill_manual(values = c("sandybrown", "saddlebrown", "papayawhip")) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
categories <- c("0-49", "50-99", "100-149", "150-199")
tr_earthquakes$Derinlik <- factor(tr_earthquakes$Derinlik, levels = categories)
table(tr_earthquakes$Derinlik)
ggplot(data = tr_earthquakes, aes(x = ML, y = Derinlik, fill = Year)) +
geom_area(position = "stack") +
ggtitle("Şubelere Göre Zamana Bağlı Satış") +
xlab("Aylar") +
ylab("Satışlar") +
scale_fill_manual(values = c("sandybrown", "saddlebrown", "papayawhip")) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
tr_earthquakes$Year <- as.factor(tr_earthquakes$Year)
ggplot(data = tr_earthquakes, aes(x = ML, y = Derinlik, fill = Year)) +
geom_area(position = "stack") +
ggtitle("Şubelere Göre Zamana Bağlı Satış") +
xlab("Aylar") +
ylab("Satışlar") +
scale_fill_manual(values = c("sandybrown", "saddlebrown", "papayawhip")) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
ggplot(data = tr_earthquakes, aes(x = ML, y = Derinlik, fill = Year)) +
geom_area(position = "stack") +
ggtitle("Şubelere Göre Zamana Bağlı Satış") +
xlab("Aylar") +
ylab("Satışlar") +
scale_fill_manual(values = c("sandybrown", "saddlebrown", "papayawhip", "sienna")) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
ggplot(data = tr_earthquakes, aes(x = ML, y = Derinlik, fill = Year)) +
geom_area(position = "stack") +
ggtitle("Derinliğe Göre Yıl ve Yerel Büyüklük") +
xlab("Aylar") +
ylab("Satışlar") +
scale_fill_manual(values = c("sandybrown", "saddlebrown", "papayawhip", "sienna")) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
tr_earthquakes$Year <- factor(tr_earthquakes$Year)
ggplot(data = tr_earthquakes, aes(x = ML, y = Derinlik, fill = Year)) +
geom_area(position = "stack") +
ggtitle("Derinliğe Göre Yıl ve Yerel Büyüklük") +
xlab("Aylar") +
ylab("Satışlar") +
scale_fill_manual(values = c("sandybrown", "saddlebrown", "papayawhip", "sienna")) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
library(plotly)
d_plot <- ggplot(tr_earthquakes, aes(Year, ML, fill=Derinlik, shape=Derinlik)) +
geom_point(position = position_jitter(width= 0.2, height = 0), size = 2)
ggplotly(d_plot)
library(plotly)
d_plot <- ggplot(tr_earthquakes, aes(Year, Deprem.Kodu, fill=Derinlik, shape=Derinlik)) +
geom_point(position = position_jitter(width= 0.2, height = 0), size = 2)
ggplotly(d_plot)
ggplot(tr_earthquakes, aes(x=Derinlik,y=Year, fill=Derinlik))+
geom_boxplot()+
stat_summary(fun = median, geom="line", group= 1, color= "black", size = 1)
tr_earthquakes <- read.csv("turkey_earthquakes_1915-2023.csv")
head(tr_earthquakes)
tr_earthquakes$No <- NULL
colSums(is.na(tr_earthquakes))
library(Hmisc)
impute_arg <- aregImpute(Mw ~ Deprem.Kodu + Enlem + Boylam + Derinlik + xM + MD + ML + Ms + Mb , data = tr_earthquakes, n.impute = 1)
# Doldurulan Mw değerleri;
impute_arg$imputed$Mw
new <- which(is.na(tr_earthquakes$Mw))
# Atama işlemi;
tr_earthquakes[new,]$Mw <- impute_arg$imputed$Mw
for (i in 1:nrow(tr_earthquakes)) {
if (tr_earthquakes$Mw[i] > tr_earthquakes$xM[i]) {
tr_earthquakes$xM[i] <- tr_earthquakes$Mw[i]
} else {
next
}
}
if (any(tr_earthquakes$Mw > tr_earthquakes$xM)) {
print("Hata")
} else {
print("Sorunsuz")
}
library(dplyr)
library(lubridate)
tr_earthquakes <- tr_earthquakes %>%
mutate(Olus.tarihi = as.Date(Olus.tarihi, format = "%Y.%m.%d")) %>%
mutate(Olus.tarihi = format(Olus.tarihi, "%d/%m/%Y"))
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= 00:00:00.00 & tr_earthquakes <= 05:59:59.99, "00-06",
ifelse(tr_earthquakes$Olus.zamani >= 06:00:00.00 & tr_earthquakes <= 11:59:59.99, "06-12",
ifelse(tr_earthquakes$Olus.zamani >= 12:00:00.00 & tr_earthquakes <= 17:59:59.99 , "12-18",
ifelse(tr_earthquakes$Olus.zamani >= 18:00:00.00 & tr_earthquakes <= 23:59:59.99 , "18-00",)))))
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= 00:00:00.00 & tr_earthquakes <= 05:59:59.99, "00-06",
ifelse(tr_earthquakes$Olus.zamani >= 06:00:00.00 & tr_earthquakes <= 11:59:59.99, "06-12",
ifelse(tr_earthquakes$Olus.zamani >= 12:00:00.00 & tr_earthquakes <= 17:59:59.99 , "12-18",
ifelse(tr_earthquakes$Olus.zamani >= 18:00:00.00 & tr_earthquakes <= 23:59:59.99 , "18-00", NA)))))
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= 00:00:00.00 & tr_earthquakes <= 05:59:59.99, "00-06",
ifelse(tr_earthquakes$Olus.zamani >= 06:00:00.00 & tr_earthquakes <= 11:59:59.99, "06-12",
ifelse(tr_earthquakes$Olus.zamani >= 12:00:00.00 & tr_earthquakes <= 17:59:59.99 , "12-18",
ifelse(tr_earthquakes$Olus.zamani >= 18:00:00.00 & tr_earthquakes <= 23:59:59.99 , "18-00")))))
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= "00:00:00.00" & tr_earthquakes$Olus.zamani <= "05:59:59.99", "00-06",
ifelse(tr_earthquakes$Olus.zamani >= "06:00:00.00" & tr_earthquakes$Olus.zamani <= "11:59:59.99", "06-12",
ifelse(tr_earthquakes$Olus.zamani >= "12:00:00.00" & tr_earthquakes$Olus.zamani <= "17:59:59.99", "12-18",
ifelse(tr_earthquakes$Olus.zamani >= "18:00:00.00" & tr_earthquakes$Olus.zamani <= "23:59:59.99", "18-00")))))
library(hms)
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= hms("00:00:00.00") & tr_earthquakes$Olus.zamani <= hms("05:59:59.99"), "00-06",
ifelse(tr_earthquakes$Olus.zamani >= hms("06:00:00.00") & tr_earthquakes$Olus.zamani <= hms("11:59:59.99"), "06-12",
ifelse(tr_earthquakes$Olus.zamani >= hms("12:00:00.00") & tr_earthquakes$Olus.zamani <= hms("17:59:59.99"), "12-18",
ifelse(tr_earthquakes$Olus.zamani >= hms("18:00:00.00") & tr_earthquakes$Olus.zamani <= hms("23:59:59.99"), "18-00", NA)))))
train$gestation <- factor(ifelse(train$gestation < 259, "Early",
ifelse(train$gestation >= 259 & train$gestation <= 294, "Healthy",
ifelse(train$gestation > 294, "Late", NA))),
levels = c("Healthy", "Late", "Early"),
labels = c("Healthy", "Late", "Early"))
categories <- c("Early", "Healthy", "Late")
train$gestation <- factor(train$gestation, levels = categories)
train$gestation <- factor(ifelse(train$gestation < 259, "Early",
ifelse(train$gestation >= 259 & train$gestation <= 294, "Healthy",
ifelse(train$gestation > 294, "Late", NA))),
levels = c("Healthy", "Late", "Early"),
labels = c("Healthy", "Late", "Early"))
categories <- c("Early", "Healthy", "Late")
train$gestation <- factor(train$gestation, levels = categories)
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= "00:00:00.00" & tr_earthquakes$Olus.zamani <= "05:59:59.99", "00-06",
ifelse(tr_earthquakes$Olus.zamani >= "06:00:00.00" & tr_earthquakes$Olus.zamani <= "11:59:59.99", "06-12",
ifelse(tr_earthquakes$Olus.zamani >= "12:00:00.00" & tr_earthquakes$Olus.zamani <= "17:59:59.99", "12-18",
ifelse(tr_earthquakes$Olus.zamani >= "18:00:00.00" & tr_earthquakes$Olus.zamani <= "23:59:59.99", "18-00")))))
library(hms)
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= hms("00:00:00.00") & tr_earthquakes$Olus.zamani <= hms("05:59:59.99"), "00-06",
ifelse(tr_earthquakes$Olus.zamani >= hms("06:00:00.00") & tr_earthquakes$Olus.zamani <= hms("11:59:59.99"), "06-12",
ifelse(tr_earthquakes$Olus.zamani >= hms("12:00:00.00") & tr_earthquakes$Olus.zamani <= hms("17:59:59.99"), "12-18",
ifelse(tr_earthquakes$Olus.zamani >= hms("18:00:00.00") & tr_earthquakes$Olus.zamani <= hms("23:59:59.99"), "18-00", NA)))),
levels = categories)
tr_earthquakes$Olus.zamani <- factor(ifelse(tr_earthquakes$Olus.zamani >= "00:00:00.00" & tr_earthquakes$Olus.zamani <= "05:59:59.99", "00-06",
ifelse(tr_earthquakes$Olus.zamani >= "06:00:00.00" & tr_earthquakes$Olus.zamani <= "11:59:59.99", "06-12",
ifelse(tr_earthquakes$Olus.zamani >= "12:00:00.00" & tr_earthquakes$Olus.zamani <= "17:59:59.99", "12-18",
ifelse(tr_earthquakes$Olus.zamani >= "18:00:00.00" & tr_earthquakes$Olus.zamani <= "23:59:59.99", "18-00",
NA)))),
levels = categories)
range(tr_earthquakes$Derinlik)
max(tr_earthquakes$Derinlik)
range(tr_earthquakes$Derinlik)
tr_earthquakes_derinlik <- tr_earthquakes[tr_earthquakes$Derinlik > 150, ]
head(tr_earthquakes_derinlik)
tr_earthquakes <- read.csv("turkey_earthquakes_1915-2023.csv")
tr_earthquakes$No <- NULL
library(Hmisc)
impute_arg <- aregImpute(Mw ~ Deprem.Kodu + Enlem + Boylam + Derinlik + xM + MD + ML + Ms + Mb , data = tr_earthquakes, n.impute = 1)
# Doldurulan Mw değerleri;
impute_arg$imputed$Mw
new <- which(is.na(tr_earthquakes$Mw))
# Atama işlemi;
tr_earthquakes[new,]$Mw <- impute_arg$imputed$Mw
for (i in 1:nrow(tr_earthquakes)) {
if (tr_earthquakes$Mw[i] > tr_earthquakes$xM[i]) {
tr_earthquakes$xM[i] <- tr_earthquakes$Mw[i]
} else {
next
}
}
if (any(tr_earthquakes$Mw > tr_earthquakes$xM)) {
print("Hata")
} else {
print("Sorunsuz")
}
library(dplyr)
library(lubridate)
tr_earthquakes <- tr_earthquakes %>%
mutate(Olus.tarihi = as.Date(Olus.tarihi, format = "%Y.%m.%d")) %>%
mutate(Olus.tarihi = format(Olus.tarihi, "%d/%m/%Y"))
library(leaflet)
tr_earthquakes_derinlik <- tr_earthquakes[tr_earthquakes$Derinlik > 150, ]
head(tr_earthquakes_derinlik)
setwd("C:/Users/zrkgl/Desktop/turkey_earthquakes")
tr_earthquakes <- read.csv("turkey_earthquakes_1915_2023.csv")
head(tr_earthquakes)
